{
  "models": [
    {
      "provider": "sambanova",
      "title": "Llama4 Scout SambaNovaCloud",
      "model": "Llama-4-Scout-17B-16E-Instruct",
      "apiKey": "<Your API Key>"
    },
    {
      "provider": "sambanova",
      "title": "Llama4 Maverick SambaNovaCloud",
      "model": "Llama-4-Maverick-17B-128E-Instruct",
      "apiKey": "<Your API Key>"
    },
    {
      "provider": "sambanova",
      "title": "DeepSeek V3 SambaNovaCloud",
      "model": "DeepSeek-V3-0324",
      "apiKey": "<Your API Key>"
    },
    {
      "provider": "sambanova",
      "title": "DeepSeek R1 SambaNovaCloud",
      "model": "DeepSeek-R1",
      "apiKey": "<Your API Key>"
    },
    {
      "provider": "sambanova",
      "title": "DeepSeek R1 Distill Llama 70B SambaNovaCloud",
      "model": "DeepSeek-R1-Distill-Llama-70B",
      "apiKey": "<Your API Key>"
    },
    {
      "provider": "sambanova",
      "title": "Llama3.1 8B SambaNovaCloud",
      "model": "Meta-Llama-3.1-8B-Instruct",
      "apiKey": "<Your API Key>"
    },
    {
      "provider": "sambanova",
      "title": "Llama3.1 405B SambaNovaCloud",
      "model": "Meta-Llama-3.1-405B-Instruct",
      "apiKey": "<Your API Key>"
    },
    {
      "provider": "sambanova",
      "title": "Llama3.2 3B SambaNovaCloud",
      "model": "Meta-Llama-3.2-3B-Instruct",
      "apiKey": "<Your API Key>"
    },
    {
      "provider": "sambanova",
      "title": "Llama3.2 1B SambaNovaCloud",
      "model": "Meta-Llama-3.2-1B-Instruct",
      "apiKey": "<Your API Key>"
    },
    {
      "provider": "sambanova",
      "title": "QWQ 32B SambaNovaCloud",
      "model": "QwQ-32B",
      "apiKey": "<Your API Key>"
    }
  ],
  "tabAutocompleteModel": {
    "provider": "sambanova",
    "title": "Llama3.1 8B SambaNovaCloud",
    "model": "Meta-Llama-3.1-8B-Instruct",
    "apiKey": "<Your API Key>"
  },
  "contextProviders": [
    {
      "name": "code",
      "params": {}
    },
    {
      "name": "docs",
      "params": {}
    },
    {
      "name": "diff",
      "params": {}
    },
    {
      "name": "terminal",
      "params": {}
    },
    {
      "name": "problems",
      "params": {}
    },
    {
      "name": "folder",
      "params": {}
    },
    {
      "name": "codebase",
      "params": {}
    }
  ],
  "slashCommands": [
    {
      "name": "share",
      "description": "Export the current chat session to markdown"
    },
    {
      "name": "cmd",
      "description": "Generate a shell command"
    },
    {
      "name": "commit",
      "description": "Generate a git commit message"
    }
  ],
  "customCommands": [
    {
      "name": "test",
      "prompt": "{{{ input }}}\n\nWrite a comprehensive set of unit tests for the selected code. It should setup, run tests that check for correctness including important edge cases, and teardown. Ensure that the tests are complete and sophisticated. Give the tests just as chat output, don't edit any file.",
      "description": "Write unit tests for highlighted code "
    }
  ],
  "allowAnonymousTelemetry": false
}